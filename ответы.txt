var a = 1, b = 1, c, d;
c = ++a; alert(c);           // 2	При такой записи оператор инкрементирования сначала прибавляет единицу к переменной а далее оператор присваивания присваивает новое значения переменной а переменной с. (Префиксный оператор инкрементирования)
d = b++; alert(d);           // 1	При такой записи оператор присваивания сначала присваивает значение переменной b переменной d, далее оператор инкрементирования прибавляет b единицу ( Постфиксный оператор инкрементирования)
c = (2+ ++a); alert(c);      // 5	При такой записи оператор инкрементирования прибавляет к a единицу, оператор сложения прибавляет к 2 новое значение a, оператор присваивания присваивает значения выражения c.
d = (2+ b++); alert(d);      // 4 При такой записи оператор сложения прибавляет к 2 значение b, оператор присваивания  присваивает значение выражения d, оператор инкрементирования прибавляет  a единицу.
alert(a);                    // 3	Инкрементирование применялось к a два раза.
alert(b);                    // 3	Инкрементирование применялось к b два раза.


var a = 2;
var x = 1 + (a *= 2);
X будет равен 5 X= 1 ( a= a * 2) 

При сравнений, null и 0 получилось, что они не равны друг другу. Я объясняю это так как написано в методичке.)

"Значения null и undefined равны друг другу, но не чему бы то ни было еще. Это жесткое правило
прописано в спецификации языка. При явном преобразовании в число (то есть вызванном
пользователем) null принимает значение 0, а undefined — NaN ."
